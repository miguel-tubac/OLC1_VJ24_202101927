// ------------  Paquete e importaciones ------------
package Analizadores;

import java_cup.runtime.*;
import java.util.LinkedList;
import InterfasGrafica.FrameInicio;
import Interprete.expresion.Datos;


//------> Codigo para el parser
//------> Declaracion de variables, funciones y funciones de error

parser code 
{:
    public static String resultado = "";
    //Errores error;
    //Simbolos sim;

    public void syntax_error(Symbol s)
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Recuperado" );
            
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Sin recuperacion." );
            
    }

:}


//------> Codigo para las acciones gramaticales (no tocar)
action code
{: :}


//------> Declaración de terminales
terminal String ENTERO;
terminal String NUMERODECIMAL;
terminal String ID;
terminal String DOSPUNTOS, DOBLEDOSPUNTOS;
terminal String COMA, PUNTOYCOMA, IGUAL;
terminal String PARENTESIS_A, PARENTESIS_C;
terminal String MENOR, MAYOR, GUION;
terminal String CORCHETE_A, CORCHETE_C;
terminal String CHAR, DOUBLE, VAR, ARR;
terminal PRINTLN;




//------> Declaración de no terminales
non terminal inicio;
non terminal lista_instrucciones;
non terminal expresion;
non terminal instruccion;
non terminal imprimir;


//------> PRECEDENCIA
precedence left COMA, PARENTESIS_A, CORCHETE_A, CORCHETE_C, PARENTESIS_C;

//------> Definir Simbolo Inicial
start with inicio; 


// ------------>  Producciones  <------------

inicio ::=  lista_instrucciones:lista {: FrameInicio.retorno.add(lista); :}
;


lista_instrucciones ::=   lista_instrucciones:anterior instruccion:nuevo 
            {: 
                LinkedList<Object> lista = (LinkedList<Object>) anterior;
                lista.add(nuevo);
                RESULT = lista;
            :}
    | instruccion:general     
            {: 
                LinkedList<Object> lista = new LinkedList<>();
                lista.add(general);
                RESULT = lista;
            :}
;

instruccion ::= imprimir:a     {: RESULT = a; :} 
    | error PUNTOYCOMA
;

imprimir ::= PRINTLN PARENTESIS_A expresion:a PARENTESIS_C PUNTOYCOMA {: RESULT = a; :} 
;


expresion ::= NUMERODECIMAL:val                                  {: RESULT =  new Datos(val,"DOUBLE","5","6"); :}
    | ENTERO:val                                                 {: RESULT = new Datos(val,"INT","5","6"); :}
    | ID:val                                                     {:  :}
;
